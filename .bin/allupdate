#!/usr/bin/env zsh

~/.setup/confgit.sh

if [ "$(command -v gcloud )" ]; then
  # Update Gcloud
  gcloud components update -q;
fi

if [ "$(command -v rustup)" ]; then
    rustup update;
fi

case "$OSTYPE" in
  darwin*)
    if [[ ! -d "/opt/homebrew" ]] && [[ -f "/private/etc/bashrc_Apple_Terminal" ]]; then
      # Install xcode cli components
      xcode-select --install
      # Install brew using checked-in copy of https://raw.githubusercontent.com/Homebrew/install/master/install
      /bin/bash -c ~/.setup/installbrew.sh

      brew doctor;
      brew update;

      # Install taps here
      brew tap git-chglog/git-chglog;
      # Tap fonts
      brew tap homebrew/cask-fonts
    fi

    # Install new brew packages
    brewtemp=$(mktemp /tmp/upbrew.XXXX)
    brew deps --installed | awk -F ':'  '{print $1}' > $brewtemp
    comm -13 $brewtemp ~/.setup/list.brew | while read -r b; do brew install $b ; done
    rm $brewtemp

    # Install new cask packages
    casktemp=$(mktemp /tmp/upbrewcask.XXXX)
    brew list --cask -1 > $casktemp
    comm -13 $casktemp ~/.setup/list.brewcask | while read -r b; do brew cask install $b ; done
    rm $casktemp

    brew update;
    brew upgrade;
    brew cleanup;

    # Update all package lists
    brew deps --installed | awk -F ':'  '{print $1}' > ~/.setup/list.brew
    brew list --cask -1 > ~/.setup/list.brewcask
    # fetch the updated brew install script only if new
    curl -fsSL -z ~/.setup/installbrew.sh --output ~/.setup/installbrew.sh https://raw.githubusercontent.com/Homebrew/install/master/install.sh
    if [ -d "~/code/work" ]; then
        # Git config for work
        if [ "$(command -v fd)" ]; then
            fd -H -t d -E mod -E vendor '.git$' ~/code/work -x bash -c "cd {//}; git config user.email tdavis@hpe.com; git config http.cookiefile /Users/tydavis/.gitcookies-work;" ;
        fi
    fi
    if [ "$(command -v code)" ]; then
        code --list-extensions > ~/.setup/code-extensions
    fi
  ;;
  linux*)
    # == ARCHLINUX ==
    sudo pacman -Syu;
    # Dump all packages into list
    echo "base" > ~/.setup/paclist
    echo "base-devel" >> ~/.setup/paclist
    pacman -Qqet | grep -v "$(pacman -Qqg base-devel)" | grep -v "$(pacman -Qqm)" >> ~/.setup/paclist
    # AUR installed / local-installed packages
    pacman -Qmq > ~/.setup/pacaur
    # Git config for work
    if [ "$(command -v fetchgit)" ]; then
        # Update all existing repos
        if [ "$(command -v fd)" ]; then
            fd -H -t d -E mod -E vendor '.git$' ~/code/work -x bash -c "cd {//}; git config user.email tdavis@hpe.com; git config http.cookiefile /home/tydavis/.gitcookies-work;" ;
            fd -H -t d -E mod -E vendor '.git$' ~/code -x bash -c "cd {//}; ~/.bin/fetchgit;" ;
            fd -H -t d '.git$' ~/.vim -x bash -c "cd {//}; ~/.bin/fetchgit;" ;
        else

        fi
    fi
    if [ "$(command -v gitrect)" ]; then
      gitrect;
      # Update our list of git repos
      gitrect -u;
    else
      if [ "$(command -v go)" ]; then
        go get -u github.com/tydavis/utilities/cmd/gitrect ;
      else
          sudo pacman -S go --noconfirm
      fi
    fi
    echo "Updating ABS builds..."
    asp update

    if [ "$(command -v auracle)" ]; then
        echo "Checking for outdated AUR packages..."
        auracle outdated;
    fi
  ;;
esac

echo "" # Newline
date;
